generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  name      String?
  age       String?
  password  String
  role      String     @default("user")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  questions Question[]
  answers   Answer[]
  hosted    Meeting[]  @relation("host")
  guest     Meeting[]  @relation("guest")
  Finance   Finance[]

  Assets Assets[]

  Liability Liability[]

  Goal Goal[]
}

model Assets {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  type     String
  ammount  String
  duration String
  user     User?   @relation(fields: [userId], references: [id])
  userId   String? @db.ObjectId
}

model Liability {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  type     String
  ammount  String
  duration String
  user     User?   @relation(fields: [userId], references: [id])
  userId   String? @db.ObjectId
}

model Goal {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  money     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model Finance {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  majorExp      String
  minorExp      String
  monthlyExp    String
  loanAmmount   String
  profession    String
  monthlyIncome String
  numberofloans String
  emiAmmount    String
  user          User?   @relation(fields: [userId], references: [id])
  userId        String? @db.ObjectId
}

model Question {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  answers   Answer[]
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model Answer {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  text       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  owner      User      @relation(fields: [userId], references: [id])
  question   Question? @relation(fields: [questionId], references: [id])
  questionId String?   @db.ObjectId
  userId     String    @db.ObjectId
}

model Meeting {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  host     User       @relation("host", fields: [hostId], references: [id])
  guest    User       @relation("guest", fields: [guestId], references: [id])
  hostId   String     @db.ObjectId
  guestId  String     @db.ObjectId
  status   String
  notes    String?
  duration Int?
  type     String?
  location String?
  dates    DateTime[] // MongoDB supports array of DateTime
}
